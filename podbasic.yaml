 Create namespace
kubectl create namespace labels
# Set namespace as the default for the current context
kubectl config set-context $(kubectl config current-context) --namespace=labels



cat << 'EOF' > first-pod.yaml
apiVersion: v1            # The API path for the Pod resource
kind: Pod                 # The kind of resource (Pod)
metadata:
  name: first-pod         # Name of the Pod
spec:
  containers:             # List of containers in the Pod
  - image: httpd:2.4.38   # Container image (using a tag to specify version 2.4.38) 
    name: first-container # Name of the container
EOF


kubectl get pod first-pod -o yaml | more



# Write the manifest file
cat << 'EOF' > pod-labels.yaml
apiVersion: v1
kind: Pod
metadata:
  name: red-frontend
  namespace: labels # ceclare namespace in metadata 
  labels: # labels mapping in metadata
    color: red
    tier: frontend
  annotations: # Example annotation
    Lab: Kubernetes Pod Design for Application Developers
spec:
  containers:
  - image: httpd:2.4.38
    name: web-server
---
apiVersion: v1
kind: Pod
metadata:
  name: green-frontend
  namespace: labels
  labels:
    color: green
    tier: frontend
spec:
  containers:
  - image: httpd:2.4.38
    name: web-server
---
apiVersion: v1
kind: Pod
metadata:
  name: red-backend
  namespace: labels
  labels:
    color: red
    tier: backend
spec:
  containers:
  - image: postgres:11.2-alpine
    name: db
---
apiVersion: v1
kind: Pod
metadata:
  name: blue-backend
  namespace: labels
  labels:
    color: blue
    tier: backend
spec:
  containers:
  - image: postgres:11.2-alpine
    name: db
EOF
# Create the Pods
kubectl create -f pod-labels.yaml

